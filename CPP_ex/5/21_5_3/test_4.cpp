// 4.6.7 多继承语法
// C++允许一个类继承多个类
// 语法：` class 子类 ：继承方式 父类1 ， 继承方式 父类2...`
// 多继承可能会引发父类中有同名成员出现，需要加作用域区分
// C++实际开发中不建议用多继承
#include<iostream>
#include<string>
using namespace std;
class Base1
{
public:
    Base1()
    {
        m_A = 100;
    }
public:
    int m_A;
};
class Base2
{
public:
    Base2()
    {
        m_B = 200;//开始是m_B 不会出问题，但是改为mA就会出现不明确
    }
public:
    int m_B;
};
//语法：class 子类：继承方式 父类1 ，继承方式 父类2 
class Son:public Base1,public Base2
{
public:
    Son()
    {
        m_C = 300;
        m_D = 400;
    }
public:
    int m_C;
    int m_D;
};

//多继承容易产生成员同名的情况
//通过使用类名作用域可以区分调用哪一个基类的成员
void test()
{
    Son s;
    cout<< "sizeof Son = " << sizeof(s)<< endl;
    cout<<"s.Base1::m_A = "<<s.Base1::m_A<<endl;
    cout<<"s.Base2::m_B = "<<s.Base2::m_B<<endl;
    cout<<"s.Son::m_C = "<<s.Son::m_C<<endl;
}
int main()
{
    test();
    system("pause");
    return 0;
}
// 总结： 多继承中如果父类中出现了同名情况，子类使用时候要加作用域